{
	"info": {
		"_postman_id": "15b30283-120b-45ef-bf8f-71769144e5ce",
		"name": "Banking system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14081802"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Sydney\",\n    \"last_name\": \"Sygel\",\n    \"email\": \"sydney@gmail.com\",\n    \"username\": \"sydney\",\n    \"password\": \"sydney123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Use this endpoint to register new Users"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"sydney\",\n    \"password\": \"sydney123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login",
								""
							]
						},
						"description": "Login with `username` and `password` to get an auth `token` you can use through other modules.\n\nTo use the token to authorize `requests` you add an `auth header` like:\n\n``` javascript\nAuthorization: Bearer <token>\n\n ```"
					},
					"response": []
				},
				{
					"name": "All users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						},
						"description": "Display all users, requires `authorization`"
					},
					"response": []
				},
				{
					"name": "Single User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get single user information, requires `authorization`"
					},
					"response": []
				}
			],
			"description": "This module helps in CRUD user Managemement"
		},
		{
			"name": "Employees",
			"item": [
				{
					"name": "Create Employee",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": 2,\n    \"employee_no\": \"EX_0002\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/employees/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update employee",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": 1,\n    \"employee_no\": \"EX_0001-UPDATED\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/employees/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "All employees",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Single Employee",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/employees/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"employees",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "This module helps is employee management that is `creation`, `updating` and also `deleting`. To `delete` an employee hit the single employee endpoint with the `DELETE` method"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Create Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": {\n        \"username\": \"dalmas\",\n        \"password\": \"dalmas\"\n    },\n    \"branch\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update customers",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": 1,\n    \"branch\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/customers/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "All customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/customers/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Single Customer",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/customers/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "This module helps is employee management that is `creation`, `updating` and also `deleting`. To `delete` an employee hit the single employee endpoint with the `DELETE` method"
		},
		{
			"name": "Branches",
			"item": [
				{
					"name": "Create Branches",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"branch 1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/branches/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"branches",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update branch",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"branch 1 updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/branches/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"branches",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "All branches",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/branches/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"branches",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Single branch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/branch/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"branch",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}